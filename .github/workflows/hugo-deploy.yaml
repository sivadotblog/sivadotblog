# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "test"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.1
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "test.siva.blog"
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./public
      - run: ls -l

      # - name: Deploy to FTP Server
      #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
      #   with:
      #     server: ${{ secrets.SERVER }}
      #     username: ${{ secrets.FTP_USER }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     local-dir: ./public/
      #     server-dir: test.siva.blog/
      #     log-level: verbose
      - name: Deploy to FTP Server with lftp
        env:
          FTP_SERVER: ${{ secrets.SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          lftp -c "
          set ftp:list-options -a;
          set ssl:verify-certificate no;
          open ftp://$FTP_USER:$FTP_PASSWORD@$FTP_SERVER;
          lcd ./public/;
          cd test.siva.blog/;
          mirror --reverse --delete --verbose ./ ./
          bye;
          "
